{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/utd/applications/goalnode/fb-login-clone/src/components/Signup.js\";\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Row, Col, Dropdown, Form, Button } from 'react-bootstrap';\n\nconst Signup = () => {\n  const [month, setMonth] = useState('Sep');\n  const [date, setDate] = useState(25);\n  const [year, setYear] = useState(2020);\n  let dates = [];\n\n  for (var i = 1; i <= 31; i++) {\n    dates.push(i);\n  }\n\n  let years = [];\n\n  for (i = 2020; i >= 1905; i--) {\n    years.push(i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"It is quick and easy\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(false);\n      console.log(values); // props.login(values)                \n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string().required(\"Required\").max(20, \"Maximum 20 characters\"),\n      lastName: Yup.string().required(\"Required\").max(20, \"Maximum 20 characters\"),\n      username: Yup.string().required(\"Required\"),\n      password: Yup.string().required(\"No password entered\").required(\"Required\").matches(/[a-zA-Z0-9]{8,}/, \"Enter valid password\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, formik => {\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = formik;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"firstName\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: values.firstName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        marginLeft: \"-5px\"\n      },\n      className: \"form-control text-box \" + (errors.firstName && touched.firstName ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }), errors.firstName && touched.firstName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, errors.firstName)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"lastName\",\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: values.lastName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      style: {\n        marginLeft: \"-5px\"\n      },\n      className: \"form-control text-box \" + (errors.lastName && touched.lastName ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, errors.lastName))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Email or Phone Number\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control text-box \" + (errors.username && touched.username ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control text-box \" + (errors.password && touched.password ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"birthDay\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, \"Birthday\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"transparent\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, month), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', \"Dec\"].map(m => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      onClick: () => setMonth(m),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 51\n      }\n    }, m))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"transparent\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, date), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, dates.map(d => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      onClick: () => setDate(d),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 51\n      }\n    }, d))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"transparent\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, year), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, years.map(y => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      onClick: () => setYear(y),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 51\n      }\n    }, y)))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"gender\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, \"Gender\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Row,\n      style: {\n        marginLeft: \"10px\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      lg: 4,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-*\",\n      className: \"genderButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Male\",\n      name: \"formHorizontalRadios\",\n      id: \"formHorizontalRadios1\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      lg: 4,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-*\",\n      className: \"genderButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Female\",\n      name: \"formHorizontalRadios\",\n      id: \"formHorizontalRadios2\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      sm: 10,\n      lg: 4,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-*\",\n      className: \"genderButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"radio\",\n      label: \"Other\",\n      name: \"formHorizontalRadios\",\n      id: \"formHorizontalRadios3\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(Card.Link, {\n      href: \"#\",\n      className: \"forgot-link float-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, \"Already have account? Login\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group jc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !(formik.isValid && formik.dirty),\n      className: \"btn btn-success btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, \"Signup\")));\n  }))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/home/oem/Desktop/utd/applications/goalnode/fb-login-clone/src/components/Signup.js"],"names":["React","useState","Formik","Yup","Card","Row","Col","Dropdown","Form","Button","Signup","month","setMonth","date","setDate","year","setYear","dates","i","push","years","username","password","values","setSubmitting","console","log","object","shape","firstName","string","required","max","lastName","matches","formik","touched","errors","handleChange","handleBlur","handleSubmit","marginLeft","map","m","d","y","width","isValid","dirty"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\n\nimport {Card,Row,Col,Dropdown,Form,Button} from 'react-bootstrap'\n\n\n\nconst Signup = () => {\n\n    const [month,setMonth]= useState('Sep')\n    const [date,setDate]= useState(25)\n    const [year,setYear]= useState(2020)\n\n    let dates = [];\n    for(var i =1 ; i <=31;i++ ){\n        dates.push(i)\n    }\n\n    let years = []\n    for(i =2020;i>=1905;i--){\n        years.push(i) \n    }\n\n    return (\n        <div>\n            <Card className=\"card-container\">\n            <Card.Body>\n            <Card.Title className=\"card-title\">Sign Up</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">It is quick and easy</Card.Subtitle>\n            <hr/>\n            <Formik\n                initialValues = {{username:'',password:''}}\n                onSubmit={(values,{setSubmitting})=>{\n                    setSubmitting(false);\n                    console.log(values)\n                    \n                    // props.login(values)                \n                    \n                }}\n                validationSchema={Yup.object().shape({\n                    firstName : Yup.string().required(\"Required\").max(20,\"Maximum 20 characters\"),\n                    lastName : Yup.string().required(\"Required\").max(20,\"Maximum 20 characters\"),\n                    username: Yup.string().required(\"Required\"),\n                    password: Yup.string().required(\"No password entered\").required(\"Required\").matches(/[a-zA-Z0-9]{8,}/,\"Enter valid password\")\n                })}\n                >\n                \n                {formik => {\n                    const {values,touched, errors, handleChange,handleBlur, handleSubmit} = formik;\n\n                    return (\n                        <form onSubmit={handleSubmit}>\n                            <Row className=\"form-group\">\n                            <Col>\n                            <input \n                                name = \"firstName\"\n                                type=\"text\"\n                                placeholder=\"First Name\"\n                                value = {values.firstName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                style={{marginLeft:\"-5px\"}}\n                                className= {\"form-control text-box \" + (errors.firstName && touched.firstName ? \"errorField\":\"\")}\n                            />\n\n                            {errors.firstName && touched.firstName && (\n                                <div className=\"error\">{errors.firstName}</div>\n                            )}\n                            </Col>\n                            <Col>\n                            <input\n                                name=\"lastName\"\n                                type=\"text\"\n                                placeholder=\"Last Name\"\n                                value={values.lastName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                style={{marginLeft:\"-5px\"}}\n                                className={\"form-control text-box \"+ (errors.lastName && touched.lastName ? \"errorField\":\"\")}\n                            />\n                            {errors.lastName && touched.lastName && (\n                                <div className=\"error\">{errors.lastName}</div>\n                            )}\n                            </Col>\n                            </Row>\n                            {/* Username */}\n                            <Row className=\"form-group\">\n                            <input \n                                name = \"username\"\n                                type=\"text\"\n                                placeholder=\"Email or Phone Number\"\n                                value = {values.username}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className= {\"form-control text-box \" + (errors.username && touched.username ? \"errorField\":\"\")}\n                            />\n\n                            {errors.username && touched.username && (\n                                <div className=\"error\" style={{marginLeft:\"10px\"}}>{errors.username}</div>\n                            )}\n                            </Row>\n                            {/* Password */}\n                            <Row className=\"form-group\">\n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"New Password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={\"form-control text-box \"+ (errors.password && touched.password ? \"errorField\":\"\")}\n                            />\n                            {errors.password && touched.password && (\n                                <div className=\"error\" style={{marginLeft:\"10px\"}}>{errors.password}</div>\n                            )}\n                            </Row>\n                            <Row>\n                            <label htmlFor=\"birthDay\" className=\"form-label\">Birthday</label>\n                            </Row>\n                            <Row>\n                            <Col>\n                                    <Dropdown>\n                                    <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\">\n                                        {month}\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        {['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov',\"Dec\"].map(\n                                            (m)=> <Dropdown.Item onClick={()=>setMonth(m)}>{m}</Dropdown.Item>\n                                        )}\n                                    </Dropdown.Menu>\n                                    </Dropdown>\n                                </Col>\n                                <Col>\n                                <Dropdown>\n                                    <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\">\n                                        {date}\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        {dates.map(\n                                            (d)=> <Dropdown.Item onClick={()=>setDate(d)}>{d}</Dropdown.Item>\n                                        )}\n                                    </Dropdown.Menu>\n                                    </Dropdown>\n                                </Col>\n                                <Col>\n                                    <Dropdown>\n                                    <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\">\n                                        {year}\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        {years.map(\n                                            (y)=> <Dropdown.Item onClick={()=>setYear(y)}>{y}</Dropdown.Item>\n                                        )}\n                                    </Dropdown.Menu>\n                                    </Dropdown>\n                                </Col>\n                                \n                            </Row>\n                            <Row>\n                            <label htmlFor=\"gender\" className=\"form-label\">Gender</label>\n                            </Row>\n                            <Row>\n                            \n                            <Form.Group as={Row} style={{marginLeft:\"10px\",width:\"100%\"}}>\n                                <Col sm={10} lg={4} md={4}>\n                                <Button variant=\"outline-*\" className=\"genderButton\">\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"Male\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"formHorizontalRadios1\"\n                                    className=\"btn\"\n                                    />\n                                </Button>\n                                </Col>\n                                <Col sm={10} lg={4} md={4}>\n                                    <Button variant=\"outline-*\" className=\"genderButton\">\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"Female\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"formHorizontalRadios2\"\n                                    className=\"btn\"\n                                    />\n                                    </Button>\n                                </Col>\n                                <Col sm={10} lg={4} md={4}>\n                                    <Button variant=\"outline-*\" className=\"genderButton\">\n                                    <Form.Check\n                                        type=\"radio\"\n                                        label=\"Other\"\n                                        name=\"formHorizontalRadios\"\n                                        id=\"formHorizontalRadios3\"\n                                        className=\"btn\"\n                                    />\n                                    </Button>\n                                </Col>\n                                </Form.Group>\n                            </Row>\n                            <Card.Link href=\"#\" className=\"forgot-link float-center\">Already have account? Login</Card.Link>\n                            {/* Signup button */}\n                            <Row className=\"form-group jc\">\n                            <button type=\"submit\" disabled={!(formik.isValid && formik.dirty) } className=\"btn btn-success btn-lg\">\n                                Signup\n                            </button>\n                            </Row>\n                        </form>\n                    );\n                \n                }}\n                \n            </Formik>\n            </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}