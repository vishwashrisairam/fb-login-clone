{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/utd/applications/goalnode/fb-login-clone/src/components/Login.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Row } from 'react-bootstrap';\nimport '../App.css';\n\nconst Login = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(false);\n      console.log(values); // props.login(values)                \n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().email(\"The email or phone number you’ve entered doesn’t match any account\").required(\"Required\"),\n      password: Yup.string().required(\"No password entered\").required(\"Required\").matches(/[a-zA-Z0-9]{8,}/, \"Enter valid password\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, formik => {\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = formik;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Email or Phone Number\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control \" + (errors.username && touched.username ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter your password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control \" + (errors.password && touched.password ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group jc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !(formik.isValid && formik.dirty),\n      className: \"btn btn-primary btn-lg home-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Card.Link, {\n      href: \"#\",\n      className: \"forgot-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"Forgot password?\")));\n  }), /*#__PURE__*/React.createElement(Card.Link, {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Card Link\"), /*#__PURE__*/React.createElement(Card.Link, {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Another Link\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/oem/Desktop/utd/applications/goalnode/fb-login-clone/src/components/Login.js"],"names":["React","Formik","Yup","Card","Row","Login","username","password","values","setSubmitting","console","log","object","shape","string","email","required","matches","formik","touched","errors","handleChange","handleBlur","handleSubmit","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\n\nimport {Card,Row} from 'react-bootstrap';\n\n\nimport '../App.css';\n\nconst Login = () => {\n    return (\n        <div>\n            <Card className=\"card-container\">\n            <Card.Body>\n            <Formik\n                initialValues = {{username:'',password:''}}\n                onSubmit={(values,{setSubmitting})=>{\n                    setSubmitting(false);\n                    console.log(values)\n                    \n                    // props.login(values)                \n                    \n                }}\n                validationSchema={Yup.object().shape({\n                    username: Yup.string().email(\"The email or phone number you’ve entered doesn’t match any account\").required(\"Required\"),\n                    password: Yup.string().required(\"No password entered\").required(\"Required\").matches(/[a-zA-Z0-9]{8,}/,\"Enter valid password\")\n                })}\n                >\n                \n                {formik => {\n                    const {values,touched, errors, handleChange,handleBlur, handleSubmit} = formik;\n\n                    return (\n                        <form onSubmit={handleSubmit}>\n                            {/* Username */}\n                            <Row className=\"form-group\">\n                            <input \n                                name = \"username\"\n                                type=\"text\"\n                                placeholder=\"Email or Phone Number\"\n                                value = {values.username}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className= {\"form-control \" + (errors.username && touched.username ? \"errorField\":\"\")}\n                            />\n\n                            {errors.username && touched.username && (\n                                <div className=\"error\">{errors.username}</div>\n                            )}\n                            </Row>\n                            {/* Password */}\n                            <Row className=\"form-group\">\n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Enter your password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={\"form-control \"+ (errors.password && touched.password ? \"errorField\":\"\")}\n                            />\n                            {errors.password && touched.password && (\n                                <div className=\"error\">{errors.password}</div>\n                            )}\n                            </Row>\n                            {/* Login button */}\n                            <Row className=\"form-group jc\">\n                            <button type=\"submit\" disabled={!(formik.isValid && formik.dirty) } className=\"btn btn-primary btn-lg home-buttons\">\n                                Login\n                            </button>\n                            <Card.Link href=\"#\" className=\"forgot-link\">Forgot password?</Card.Link>\n                            </Row>\n                        </form>\n                    );\n                \n                }}\n                \n            </Formik>\n                <Card.Link href=\"#\">Card Link</Card.Link>\n                <Card.Link href=\"#\">Another Link</Card.Link>\n            </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}