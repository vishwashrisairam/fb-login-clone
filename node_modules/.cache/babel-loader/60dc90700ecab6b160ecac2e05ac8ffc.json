{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/utd/applications/goalnode/fb-login-clone/src/components/Signup.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Card, Row, Col, Dropdown } from 'react-bootstrap';\n\nconst Signup = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"It is quick and easy\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(false);\n      console.log(values); // props.login(values)                \n    },\n    validationSchema: Yup.object().shape({\n      firstName: Yup.string().required(\"Required\").max(20, \"Maximum 20 characters\"),\n      lastName: Yup.string().required(\"Required\").max(20, \"Maximum 20 characters\"),\n      username: Yup.string().required(\"Required\"),\n      password: Yup.string().required(\"No password entered\").required(\"Required\").matches(/[a-zA-Z0-9]{8,}/, \"Enter valid password\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, formik => {\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = formik;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"firstName\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: values.firstName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control text-box \" + (errors.firstName && touched.firstName ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }), errors.firstName && touched.firstName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, errors.firstName)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"lastName\",\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: values.lastName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control text-box \" + (errors.lastName && touched.lastName ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, errors.lastName))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Email or Phone Number\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control text-box \" + (errors.username && touched.username ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: \"form-control text-box \" + (errors.password && touched.password ? \"errorField\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"transparent\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, \"Dropdown Button\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', \"Dec\"].map(month => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 55\n      }\n    }, month))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group jc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !(formik.isValid && formik.dirty),\n      className: \"btn btn-success btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Signup\")));\n  }))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/home/oem/Desktop/utd/applications/goalnode/fb-login-clone/src/components/Signup.js"],"names":["React","Formik","Yup","Card","Row","Col","Dropdown","Signup","username","password","values","setSubmitting","console","log","object","shape","firstName","string","required","max","lastName","matches","formik","touched","errors","handleChange","handleBlur","handleSubmit","map","month","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\n\nimport {Card,Row,Col,Dropdown} from 'react-bootstrap'\n\nconst Signup = () => {\n    return (\n        <div>\n            <Card className=\"card-container\">\n            <Card.Body>\n            <Card.Title>Sign Up</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">It is quick and easy</Card.Subtitle>\n            <hr/>\n            <Formik\n                initialValues = {{username:'',password:''}}\n                onSubmit={(values,{setSubmitting})=>{\n                    setSubmitting(false);\n                    console.log(values)\n                    \n                    // props.login(values)                \n                    \n                }}\n                validationSchema={Yup.object().shape({\n                    firstName : Yup.string().required(\"Required\").max(20,\"Maximum 20 characters\"),\n                    lastName : Yup.string().required(\"Required\").max(20,\"Maximum 20 characters\"),\n                    username: Yup.string().required(\"Required\"),\n                    password: Yup.string().required(\"No password entered\").required(\"Required\").matches(/[a-zA-Z0-9]{8,}/,\"Enter valid password\")\n                })}\n                >\n                \n                {formik => {\n                    const {values,touched, errors, handleChange,handleBlur, handleSubmit} = formik;\n\n                    return (\n                        <form onSubmit={handleSubmit}>\n                            <Row className=\"form-group\">\n                            <Col>\n                            <input \n                                name = \"firstName\"\n                                type=\"text\"\n                                placeholder=\"First Name\"\n                                value = {values.firstName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className= {\"form-control text-box \" + (errors.firstName && touched.firstName ? \"errorField\":\"\")}\n                            />\n\n                            {errors.firstName && touched.firstName && (\n                                <div className=\"error\">{errors.firstName}</div>\n                            )}\n                            </Col>\n                            <Col>\n                            <input\n                                name=\"lastName\"\n                                type=\"text\"\n                                placeholder=\"Last Name\"\n                                value={values.lastName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={\"form-control text-box \"+ (errors.lastName && touched.lastName ? \"errorField\":\"\")}\n                            />\n                            {errors.lastName && touched.lastName && (\n                                <div className=\"error\">{errors.lastName}</div>\n                            )}\n                            </Col>\n                            </Row>\n                            {/* Username */}\n                            <Row className=\"form-group\">\n                            <input \n                                name = \"username\"\n                                type=\"text\"\n                                placeholder=\"Email or Phone Number\"\n                                value = {values.username}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className= {\"form-control text-box \" + (errors.username && touched.username ? \"errorField\":\"\")}\n                            />\n\n                            {errors.username && touched.username && (\n                                <div className=\"error\">{errors.username}</div>\n                            )}\n                            </Row>\n                            {/* Password */}\n                            <Row className=\"form-group\">\n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"New Password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={\"form-control text-box \"+ (errors.password && touched.password ? \"errorField\":\"\")}\n                            />\n                            {errors.password && touched.password && (\n                                <div className=\"error\">{errors.password}</div>\n                            )}\n                            </Row>\n                            <Row>\n                                <Col>\n                                <Dropdown>\n                                    <Dropdown.Toggle variant=\"transparent\" id=\"dropdown-basic\">\n                                        Dropdown Button\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        {['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov',\"Dec\"].map(\n                                            (month)=> <Dropdown.Item href=\"#/action-1\">{month}</Dropdown.Item>\n                                        )}\n                                        \n                            \n                                    </Dropdown.Menu>\n                                    </Dropdown>\n                                </Col>\n                                <Col></Col>\n                                <Col></Col>\n                            </Row>\n                            {/* Login button */}\n                            <Row className=\"form-group jc\">\n                            <button type=\"submit\" disabled={!(formik.isValid && formik.dirty) } className=\"btn btn-success btn-lg\">\n                                Signup\n                            </button>\n                            </Row>\n                        </form>\n                    );\n                \n                }}\n                \n            </Formik>\n            </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}